// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Characters Grid Test Component should render correctly with results 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CharactersGrid
    data={
        Object {
            "next": "nextURL",
            "previous": "prevURL",
            "results": Array [
              Object {
                "eye_color": "blue",
                "gender": "male",
                "height": "172",
                "mass": "77",
                "name": "Luke Skywalker",
                "skin_color": "fair",
              },
              Object {
                "eye_color": "red",
                "gender": "n/a",
                "height": "96",
                "mass": "32",
                "name": "R2-D2",
                "skin_color": "white,blue",
              },
            ],
          }
    }
    filterCallback={[Function]}
    moreCallback={[Function]}
    showCharacterCallback={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridRow
          id="filters-row"
>
          <GridColumn>
                    <Filters
                              filterCallback={[Function]}
                    />
          </GridColumn>
</GridRow>,
        <Divider />,
        <GridRow
          id="results-row"
>
          <Grid
                    columns={4}
                    stackable={true}
          >
                    <GridRow>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "blue",
                                                                      "gender": "male",
                                                                      "height": "172",
                                                                      "mass": "77",
                                                                      "name": "Luke Skywalker",
                                                                      "skin_color": "fair",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "red",
                                                                      "gender": "n/a",
                                                                      "height": "96",
                                                                      "mass": "32",
                                                                      "name": "R2-D2",
                                                                      "skin_color": "white,blue",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                    </GridRow>
                    <Divider />
                    <GridRow
                              id="actions"
                    >
                              <Button
                                        as="button"
                                        id="prev"
                                        onClick={[Function]}
                                        secondary={true}
                              >
                                        Previous
                              </Button>
                              <Button
                                        as="button"
                                        id="next"
                                        onClick={[Function]}
                                        primary={true}
                              >
                                        Next
                              </Button>
                    </GridRow>
          </Grid>
</GridRow>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn>
            <Filters
                        filterCallback={[Function]}
            />
</GridColumn>,
          "id": "filters-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Filters
              filterCallback={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterCallback": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Grid
            columns={4}
            stackable={true}
>
            <GridRow>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
            </GridRow>
            <Divider />
            <GridRow
                        id="actions"
            >
                        <Button
                                    as="button"
                                    id="prev"
                                    onClick={[Function]}
                                    secondary={true}
                        >
                                    Previous
                        </Button>
                        <Button
                                    as="button"
                                    id="next"
                                    onClick={[Function]}
                                    primary={true}
                        >
                                    Next
                        </Button>
            </GridRow>
</Grid>,
          "id": "results-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
</GridRow>,
              <Divider />,
              <GridRow
                id="actions"
>
                <Button
                                as="button"
                                id="prev"
                                onClick={[Function]}
                                secondary={true}
                >
                                Previous
                </Button>
                <Button
                                as="button"
                                id="next"
                                onClick={[Function]}
                                primary={true}
                >
                                Next
                </Button>
</GridRow>,
            ],
            "columns": 4,
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "blue",
                                                                  "gender": "male",
                                                                  "height": "172",
                                                                  "mass": "77",
                                                                  "name": "Luke Skywalker",
                                                                  "skin_color": "fair",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "blue",
                        "gender": "male",
                        "height": "172",
                        "mass": "77",
                        "name": "Luke Skywalker",
                        "skin_color": "fair",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "red",
                                                                  "gender": "n/a",
                                                                  "height": "96",
                                                                  "mass": "32",
                                                                  "name": "R2-D2",
                                                                  "skin_color": "white,blue",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "red",
                        "gender": "n/a",
                        "height": "96",
                        "mass": "32",
                        "name": "R2-D2",
                        "skin_color": "white,blue",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Button
                    as="button"
                    id="prev"
                    onClick={[Function]}
                    secondary={true}
>
                    Previous
</Button>,
                  <Button
                    as="button"
                    id="next"
                    onClick={[Function]}
                    primary={true}
>
                    Next
</Button>,
                ],
                "id": "actions",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Previous",
                    "id": "prev",
                    "onClick": [Function],
                    "secondary": true,
                  },
                  "ref": null,
                  "rendered": "Previous",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Next",
                    "id": "next",
                    "onClick": [Function],
                    "primary": true,
                  },
                  "ref": null,
                  "rendered": "Next",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridRow
            id="filters-row"
>
            <GridColumn>
                        <Filters
                                    filterCallback={[Function]}
                        />
            </GridColumn>
</GridRow>,
          <Divider />,
          <GridRow
            id="results-row"
>
            <Grid
                        columns={4}
                        stackable={true}
            >
                        <GridRow>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                        </GridRow>
                        <Divider />
                        <GridRow
                                    id="actions"
                        >
                                    <Button
                                                as="button"
                                                id="prev"
                                                onClick={[Function]}
                                                secondary={true}
                                    >
                                                Previous
                                    </Button>
                                    <Button
                                                as="button"
                                                id="next"
                                                onClick={[Function]}
                                                primary={true}
                                    >
                                                Next
                                    </Button>
                        </GridRow>
            </Grid>
</GridRow>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn>
              <Filters
                            filterCallback={[Function]}
              />
</GridColumn>,
            "id": "filters-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Filters
                filterCallback={[Function]}
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterCallback": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              columns={4}
              stackable={true}
>
              <GridRow>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
              </GridRow>
              <Divider />
              <GridRow
                            id="actions"
              >
                            <Button
                                          as="button"
                                          id="prev"
                                          onClick={[Function]}
                                          secondary={true}
                            >
                                          Previous
                            </Button>
                            <Button
                                          as="button"
                                          id="next"
                                          onClick={[Function]}
                                          primary={true}
                            >
                                          Next
                            </Button>
              </GridRow>
</Grid>,
            "id": "results-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridRow>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "blue",
                                                                                          "gender": "male",
                                                                                          "height": "172",
                                                                                          "mass": "77",
                                                                                          "name": "Luke Skywalker",
                                                                                          "skin_color": "fair",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "red",
                                                                                          "gender": "n/a",
                                                                                          "height": "96",
                                                                                          "mass": "32",
                                                                                          "name": "R2-D2",
                                                                                          "skin_color": "white,blue",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
</GridRow>,
                <Divider />,
                <GridRow
                  id="actions"
>
                  <Button
                                    as="button"
                                    id="prev"
                                    onClick={[Function]}
                                    secondary={true}
                  >
                                    Previous
                  </Button>
                  <Button
                                    as="button"
                                    id="next"
                                    onClick={[Function]}
                                    primary={true}
                  >
                                    Next
                  </Button>
</GridRow>,
              ],
              "columns": 4,
              "stackable": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "blue",
                                                                                        "gender": "male",
                                                                                        "height": "172",
                                                                                        "mass": "77",
                                                                                        "name": "Luke Skywalker",
                                                                                        "skin_color": "fair",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "red",
                                                                                        "gender": "n/a",
                                                                                        "height": "96",
                                                                                        "mass": "32",
                                                                                        "name": "R2-D2",
                                                                                        "skin_color": "white,blue",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "blue",
                          "gender": "male",
                          "height": "172",
                          "mass": "77",
                          "name": "Luke Skywalker",
                          "skin_color": "fair",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "red",
                          "gender": "n/a",
                          "height": "96",
                          "mass": "32",
                          "name": "R2-D2",
                          "skin_color": "white,blue",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Button
                      as="button"
                      id="prev"
                      onClick={[Function]}
                      secondary={true}
>
                      Previous
</Button>,
                    <Button
                      as="button"
                      id="next"
                      onClick={[Function]}
                      primary={true}
>
                      Next
</Button>,
                  ],
                  "id": "actions",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Previous",
                      "id": "prev",
                      "onClick": [Function],
                      "secondary": true,
                    },
                    "ref": null,
                    "rendered": "Previous",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Next",
                      "id": "next",
                      "onClick": [Function],
                      "primary": true,
                    },
                    "ref": null,
                    "rendered": "Next",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Characters Grid Test Component should render correctly without ndext results 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CharactersGrid
    data={
        Object {
            "next": null,
            "previous": "prevURL",
            "results": Array [
              Object {
                "eye_color": "blue",
                "gender": "male",
                "height": "172",
                "mass": "77",
                "name": "Luke Skywalker",
                "skin_color": "fair",
              },
              Object {
                "eye_color": "red",
                "gender": "n/a",
                "height": "96",
                "mass": "32",
                "name": "R2-D2",
                "skin_color": "white,blue",
              },
            ],
          }
    }
    filterCallback={[Function]}
    moreCallback={[Function]}
    showCharacterCallback={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridRow
          id="filters-row"
>
          <GridColumn>
                    <Filters
                              filterCallback={[Function]}
                    />
          </GridColumn>
</GridRow>,
        <Divider />,
        <GridRow
          id="results-row"
>
          <Grid
                    columns={4}
                    stackable={true}
          >
                    <GridRow>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "blue",
                                                                      "gender": "male",
                                                                      "height": "172",
                                                                      "mass": "77",
                                                                      "name": "Luke Skywalker",
                                                                      "skin_color": "fair",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "red",
                                                                      "gender": "n/a",
                                                                      "height": "96",
                                                                      "mass": "32",
                                                                      "name": "R2-D2",
                                                                      "skin_color": "white,blue",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                    </GridRow>
                    <Divider />
                    <GridRow
                              id="actions"
                    >
                              <Button
                                        as="button"
                                        id="prev"
                                        onClick={[Function]}
                                        secondary={true}
                              >
                                        Previous
                              </Button>
                    </GridRow>
          </Grid>
</GridRow>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn>
            <Filters
                        filterCallback={[Function]}
            />
</GridColumn>,
          "id": "filters-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Filters
              filterCallback={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterCallback": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Grid
            columns={4}
            stackable={true}
>
            <GridRow>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
            </GridRow>
            <Divider />
            <GridRow
                        id="actions"
            >
                        <Button
                                    as="button"
                                    id="prev"
                                    onClick={[Function]}
                                    secondary={true}
                        >
                                    Previous
                        </Button>
            </GridRow>
</Grid>,
          "id": "results-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
</GridRow>,
              <Divider />,
              <GridRow
                id="actions"
>
                <Button
                                as="button"
                                id="prev"
                                onClick={[Function]}
                                secondary={true}
                >
                                Previous
                </Button>
</GridRow>,
            ],
            "columns": 4,
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "blue",
                                                                  "gender": "male",
                                                                  "height": "172",
                                                                  "mass": "77",
                                                                  "name": "Luke Skywalker",
                                                                  "skin_color": "fair",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "blue",
                        "gender": "male",
                        "height": "172",
                        "mass": "77",
                        "name": "Luke Skywalker",
                        "skin_color": "fair",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "red",
                                                                  "gender": "n/a",
                                                                  "height": "96",
                                                                  "mass": "32",
                                                                  "name": "R2-D2",
                                                                  "skin_color": "white,blue",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "red",
                        "gender": "n/a",
                        "height": "96",
                        "mass": "32",
                        "name": "R2-D2",
                        "skin_color": "white,blue",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Button
                    as="button"
                    id="prev"
                    onClick={[Function]}
                    secondary={true}
>
                    Previous
</Button>,
                  null,
                ],
                "id": "actions",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Previous",
                    "id": "prev",
                    "onClick": [Function],
                    "secondary": true,
                  },
                  "ref": null,
                  "rendered": "Previous",
                  "type": [Function],
                },
                null,
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridRow
            id="filters-row"
>
            <GridColumn>
                        <Filters
                                    filterCallback={[Function]}
                        />
            </GridColumn>
</GridRow>,
          <Divider />,
          <GridRow
            id="results-row"
>
            <Grid
                        columns={4}
                        stackable={true}
            >
                        <GridRow>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                        </GridRow>
                        <Divider />
                        <GridRow
                                    id="actions"
                        >
                                    <Button
                                                as="button"
                                                id="prev"
                                                onClick={[Function]}
                                                secondary={true}
                                    >
                                                Previous
                                    </Button>
                        </GridRow>
            </Grid>
</GridRow>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn>
              <Filters
                            filterCallback={[Function]}
              />
</GridColumn>,
            "id": "filters-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Filters
                filterCallback={[Function]}
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterCallback": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              columns={4}
              stackable={true}
>
              <GridRow>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
              </GridRow>
              <Divider />
              <GridRow
                            id="actions"
              >
                            <Button
                                          as="button"
                                          id="prev"
                                          onClick={[Function]}
                                          secondary={true}
                            >
                                          Previous
                            </Button>
              </GridRow>
</Grid>,
            "id": "results-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridRow>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "blue",
                                                                                          "gender": "male",
                                                                                          "height": "172",
                                                                                          "mass": "77",
                                                                                          "name": "Luke Skywalker",
                                                                                          "skin_color": "fair",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "red",
                                                                                          "gender": "n/a",
                                                                                          "height": "96",
                                                                                          "mass": "32",
                                                                                          "name": "R2-D2",
                                                                                          "skin_color": "white,blue",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
</GridRow>,
                <Divider />,
                <GridRow
                  id="actions"
>
                  <Button
                                    as="button"
                                    id="prev"
                                    onClick={[Function]}
                                    secondary={true}
                  >
                                    Previous
                  </Button>
</GridRow>,
              ],
              "columns": 4,
              "stackable": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "blue",
                                                                                        "gender": "male",
                                                                                        "height": "172",
                                                                                        "mass": "77",
                                                                                        "name": "Luke Skywalker",
                                                                                        "skin_color": "fair",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "red",
                                                                                        "gender": "n/a",
                                                                                        "height": "96",
                                                                                        "mass": "32",
                                                                                        "name": "R2-D2",
                                                                                        "skin_color": "white,blue",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "blue",
                          "gender": "male",
                          "height": "172",
                          "mass": "77",
                          "name": "Luke Skywalker",
                          "skin_color": "fair",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "red",
                          "gender": "n/a",
                          "height": "96",
                          "mass": "32",
                          "name": "R2-D2",
                          "skin_color": "white,blue",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Button
                      as="button"
                      id="prev"
                      onClick={[Function]}
                      secondary={true}
>
                      Previous
</Button>,
                    null,
                  ],
                  "id": "actions",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Previous",
                      "id": "prev",
                      "onClick": [Function],
                      "secondary": true,
                    },
                    "ref": null,
                    "rendered": "Previous",
                    "type": [Function],
                  },
                  null,
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Characters Grid Test Component should render correctly without prev results 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CharactersGrid
    data={
        Object {
            "next": "nextURL",
            "previous": null,
            "results": Array [
              Object {
                "eye_color": "blue",
                "gender": "male",
                "height": "172",
                "mass": "77",
                "name": "Luke Skywalker",
                "skin_color": "fair",
              },
              Object {
                "eye_color": "red",
                "gender": "n/a",
                "height": "96",
                "mass": "32",
                "name": "R2-D2",
                "skin_color": "white,blue",
              },
            ],
          }
    }
    filterCallback={[Function]}
    moreCallback={[Function]}
    showCharacterCallback={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridRow
          id="filters-row"
>
          <GridColumn>
                    <Filters
                              filterCallback={[Function]}
                    />
          </GridColumn>
</GridRow>,
        <Divider />,
        <GridRow
          id="results-row"
>
          <Grid
                    columns={4}
                    stackable={true}
          >
                    <GridRow>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "blue",
                                                                      "gender": "male",
                                                                      "height": "172",
                                                                      "mass": "77",
                                                                      "name": "Luke Skywalker",
                                                                      "skin_color": "fair",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                              <GridColumn
                                        stretched={true}
                              >
                                        <CharacterCard
                                                  character={
                                                            Object {
                                                                      "eye_color": "red",
                                                                      "gender": "n/a",
                                                                      "height": "96",
                                                                      "mass": "32",
                                                                      "name": "R2-D2",
                                                                      "skin_color": "white,blue",
                                                                    }
                                                  }
                                                  showCharacterModal={[Function]}
                                        />
                              </GridColumn>
                    </GridRow>
                    <Divider />
                    <GridRow
                              id="actions"
                    >
                              <Button
                                        as="button"
                                        id="next"
                                        onClick={[Function]}
                                        primary={true}
                              >
                                        Next
                              </Button>
                    </GridRow>
          </Grid>
</GridRow>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn>
            <Filters
                        filterCallback={[Function]}
            />
</GridColumn>,
          "id": "filters-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Filters
              filterCallback={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterCallback": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Grid
            columns={4}
            stackable={true}
>
            <GridRow>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
                        <GridColumn
                                    stretched={true}
                        >
                                    <CharacterCard
                                                character={
                                                            Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                                                }
                                                showCharacterModal={[Function]}
                                    />
                        </GridColumn>
            </GridRow>
            <Divider />
            <GridRow
                        id="actions"
            >
                        <Button
                                    as="button"
                                    id="next"
                                    onClick={[Function]}
                                    primary={true}
                        >
                                    Next
                        </Button>
            </GridRow>
</Grid>,
          "id": "results-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
                <GridColumn
                                stretched={true}
                >
                                <CharacterCard
                                                character={
                                                                Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                                }
                                                showCharacterModal={[Function]}
                                />
                </GridColumn>
</GridRow>,
              <Divider />,
              <GridRow
                id="actions"
>
                <Button
                                as="button"
                                id="next"
                                onClick={[Function]}
                                primary={true}
                >
                                Next
                </Button>
</GridRow>,
            ],
            "columns": 4,
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "blue",
                                                                                "gender": "male",
                                                                                "height": "172",
                                                                                "mass": "77",
                                                                                "name": "Luke Skywalker",
                                                                                "skin_color": "fair",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                  <GridColumn
                    stretched={true}
>
                    <CharacterCard
                                        character={
                                                            Object {
                                                                                "eye_color": "red",
                                                                                "gender": "n/a",
                                                                                "height": "96",
                                                                                "mass": "32",
                                                                                "name": "R2-D2",
                                                                                "skin_color": "white,blue",
                                                                              }
                                        }
                                        showCharacterModal={[Function]}
                    />
</GridColumn>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "blue",
                                                                  "gender": "male",
                                                                  "height": "172",
                                                                  "mass": "77",
                                                                  "name": "Luke Skywalker",
                                                                  "skin_color": "fair",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "blue",
                        "gender": "male",
                        "height": "172",
                        "mass": "77",
                        "name": "Luke Skywalker",
                        "skin_color": "fair",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <CharacterCard
                      character={
                                            Object {
                                                                  "eye_color": "red",
                                                                  "gender": "n/a",
                                                                  "height": "96",
                                                                  "mass": "32",
                                                                  "name": "R2-D2",
                                                                  "skin_color": "white,blue",
                                                                }
                      }
                      showCharacterModal={[Function]}
/>,
                    "stretched": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "character": Object {
                        "eye_color": "red",
                        "gender": "n/a",
                        "height": "96",
                        "mass": "32",
                        "name": "R2-D2",
                        "skin_color": "white,blue",
                      },
                      "showCharacterModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  null,
                  <Button
                    as="button"
                    id="next"
                    onClick={[Function]}
                    primary={true}
>
                    Next
</Button>,
                ],
                "id": "actions",
              },
              "ref": null,
              "rendered": Array [
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Next",
                    "id": "next",
                    "onClick": [Function],
                    "primary": true,
                  },
                  "ref": null,
                  "rendered": "Next",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridRow
            id="filters-row"
>
            <GridColumn>
                        <Filters
                                    filterCallback={[Function]}
                        />
            </GridColumn>
</GridRow>,
          <Divider />,
          <GridRow
            id="results-row"
>
            <Grid
                        columns={4}
                        stackable={true}
            >
                        <GridRow>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                                    <GridColumn
                                                stretched={true}
                                    >
                                                <CharacterCard
                                                            character={
                                                                        Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                            }
                                                            showCharacterModal={[Function]}
                                                />
                                    </GridColumn>
                        </GridRow>
                        <Divider />
                        <GridRow
                                    id="actions"
                        >
                                    <Button
                                                as="button"
                                                id="next"
                                                onClick={[Function]}
                                                primary={true}
                                    >
                                                Next
                                    </Button>
                        </GridRow>
            </Grid>
</GridRow>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn>
              <Filters
                            filterCallback={[Function]}
              />
</GridColumn>,
            "id": "filters-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Filters
                filterCallback={[Function]}
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterCallback": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              columns={4}
              stackable={true}
>
              <GridRow>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "blue",
                                                                                    "gender": "male",
                                                                                    "height": "172",
                                                                                    "mass": "77",
                                                                                    "name": "Luke Skywalker",
                                                                                    "skin_color": "fair",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
                            <GridColumn
                                          stretched={true}
                            >
                                          <CharacterCard
                                                        character={
                                                                      Object {
                                                                                    "eye_color": "red",
                                                                                    "gender": "n/a",
                                                                                    "height": "96",
                                                                                    "mass": "32",
                                                                                    "name": "R2-D2",
                                                                                    "skin_color": "white,blue",
                                                                                  }
                                                        }
                                                        showCharacterModal={[Function]}
                                          />
                            </GridColumn>
              </GridRow>
              <Divider />
              <GridRow
                            id="actions"
              >
                            <Button
                                          as="button"
                                          id="next"
                                          onClick={[Function]}
                                          primary={true}
                            >
                                          Next
                            </Button>
              </GridRow>
</Grid>,
            "id": "results-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridRow>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "blue",
                                                                                          "gender": "male",
                                                                                          "height": "172",
                                                                                          "mass": "77",
                                                                                          "name": "Luke Skywalker",
                                                                                          "skin_color": "fair",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
                  <GridColumn
                                    stretched={true}
                  >
                                    <CharacterCard
                                                      character={
                                                                        Object {
                                                                                          "eye_color": "red",
                                                                                          "gender": "n/a",
                                                                                          "height": "96",
                                                                                          "mass": "32",
                                                                                          "name": "R2-D2",
                                                                                          "skin_color": "white,blue",
                                                                                        }
                                                      }
                                                      showCharacterModal={[Function]}
                                    />
                  </GridColumn>
</GridRow>,
                <Divider />,
                <GridRow
                  id="actions"
>
                  <Button
                                    as="button"
                                    id="next"
                                    onClick={[Function]}
                                    primary={true}
                  >
                                    Next
                  </Button>
</GridRow>,
              ],
              "columns": 4,
              "stackable": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "blue",
                                                                                        "gender": "male",
                                                                                        "height": "172",
                                                                                        "mass": "77",
                                                                                        "name": "Luke Skywalker",
                                                                                        "skin_color": "fair",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                    <GridColumn
                      stretched={true}
>
                      <CharacterCard
                                            character={
                                                                  Object {
                                                                                        "eye_color": "red",
                                                                                        "gender": "n/a",
                                                                                        "height": "96",
                                                                                        "mass": "32",
                                                                                        "name": "R2-D2",
                                                                                        "skin_color": "white,blue",
                                                                                      }
                                            }
                                            showCharacterModal={[Function]}
                      />
</GridColumn>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "blue",
                                                                        "gender": "male",
                                                                        "height": "172",
                                                                        "mass": "77",
                                                                        "name": "Luke Skywalker",
                                                                        "skin_color": "fair",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "blue",
                          "gender": "male",
                          "height": "172",
                          "mass": "77",
                          "name": "Luke Skywalker",
                          "skin_color": "fair",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "children": <CharacterCard
                        character={
                                                Object {
                                                                        "eye_color": "red",
                                                                        "gender": "n/a",
                                                                        "height": "96",
                                                                        "mass": "32",
                                                                        "name": "R2-D2",
                                                                        "skin_color": "white,blue",
                                                                      }
                        }
                        showCharacterModal={[Function]}
/>,
                      "stretched": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "character": Object {
                          "eye_color": "red",
                          "gender": "n/a",
                          "height": "96",
                          "mass": "32",
                          "name": "R2-D2",
                          "skin_color": "white,blue",
                        },
                        "showCharacterModal": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    null,
                    <Button
                      as="button"
                      id="next"
                      onClick={[Function]}
                      primary={true}
>
                      Next
</Button>,
                  ],
                  "id": "actions",
                },
                "ref": null,
                "rendered": Array [
                  null,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Next",
                      "id": "next",
                      "onClick": [Function],
                      "primary": true,
                    },
                    "ref": null,
                    "rendered": "Next",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Characters Grid Test Component should render correctly without results 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CharactersGrid
    data={
        Object {
            "next": null,
            "previous": null,
            "results": Array [],
          }
    }
    filterCallback={[Function]}
    moreCallback={[Function]}
    showCharacterCallback={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridRow
          id="filters-row"
>
          <GridColumn>
                    <Filters
                              filterCallback={[Function]}
                    />
          </GridColumn>
</GridRow>,
        <Divider />,
        <GridRow
          id="results-row"
>
          <Grid
                    columns={4}
                    stackable={true}
          >
                    <GridRow>
                              
                    </GridRow>
                    <Divider />
          </Grid>
</GridRow>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn>
            <Filters
                        filterCallback={[Function]}
            />
</GridColumn>,
          "id": "filters-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Filters
              filterCallback={[Function]}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "filterCallback": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Grid
            columns={4}
            stackable={true}
>
            <GridRow>
                        
            </GridRow>
            <Divider />
</Grid>,
          "id": "results-row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow>
                
</GridRow>,
              <Divider />,
              null,
            ],
            "columns": 4,
            "stackable": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            null,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridRow
            id="filters-row"
>
            <GridColumn>
                        <Filters
                                    filterCallback={[Function]}
                        />
            </GridColumn>
</GridRow>,
          <Divider />,
          <GridRow
            id="results-row"
>
            <Grid
                        columns={4}
                        stackable={true}
            >
                        <GridRow>
                                    
                        </GridRow>
                        <Divider />
            </Grid>
</GridRow>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn>
              <Filters
                            filterCallback={[Function]}
              />
</GridColumn>,
            "id": "filters-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Filters
                filterCallback={[Function]}
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "filterCallback": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Grid
              columns={4}
              stackable={true}
>
              <GridRow>
                            
              </GridRow>
              <Divider />
</Grid>,
            "id": "results-row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridRow>
                  
</GridRow>,
                <Divider />,
                null,
              ],
              "columns": 4,
              "stackable": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              null,
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
